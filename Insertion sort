INSERTION SORT :

i/p : 5 
      4 3 2 5 1

o/p : 1 2 3 4 5

PSEUDO CODE :

For i=0 to N-1
  j=i
  Do While(j>0) and(A(j)>A(j-1))
    Temp=a(j)
    a(j)=a(j-1)
    a(j-1)=Temp
    j=j-1
  End Do
End For


CODE :

import java.util.*;
class InsertionSort{
        static void insertionSort(int a[],int n)
        {
            for(int i=1;i<n;i++)
            {
                int j=i;
                while(j>0&&a[j]<a[j-1])
                {
                    int t=a[j];
                        a[j]=a[j-1];
                        a[j-1]=t;
                    j--;
                }
            }
        }
 public static void main(String[] args) {
         Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        int a[]=new int[n];
        for(int i=0;i<n;i++)
        {
            a[i]=s.nextInt();
        }
        insertionSort(a,n);
        for(int i=0;i<n;i++)
        {
        System.out.print(a[i]+" ");
        }
    }
}

Time complexity :
	Best :O(n)
	Avg  :O(n^2)
	Worst:O(n^2)
			
Space complexity : O(1) 
