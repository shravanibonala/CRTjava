BINARY SEARCH USING RECURSION 

I/P : 5
      5 3 2 7 1
      4
O/P : Element is not present

I/P : 5
      1 3 7 4 2
      4
O/P : Element is found at : 3

CODE :

import java.util.*;
class  BinarySearchRec{
    static int binarySearch(int a[],int l,int h,int key)
    {
        if(l<=h)
        {
            int mid=(l+h)/2;
            if(a[mid]==key)
                return mid;
            else if(a[mid]<key)
                return binarySearch(a,mid+1,h,key);
            else
                return binarySearch(a,l,mid-1,key);
        }
        else{
            return -1;
        }
    }
    public static void main(String[] args) {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        int a[]=new int[n];
        for(int i=0;i<n;i++)
        {
            a[i]=s.nextInt();
        }
        Arrays.sort(a);
        int k=s.nextInt();
        int res=binarySearch(a,0,n,k);
        if(res==-1)
        {
            System.out.println("Element is not present");
        }
        else
        {
             System.out.println("Element is found at : "+res);
        }
    }
}
